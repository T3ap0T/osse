{"version":3,"sources":["components/CreateEvent/clicktosee.png","components/App/logo.svg","components/App/lantern.svg","components/App/github.svg","components/CreateForm/index.js","components/CreateEvent/GetCurrent.js","components/CreateEvent/ViewEvent.js","components/CreateEvent/EventList.js","components/App/Header.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","CreateForm","props","state","names","addMember","expData","waitingForAPI","newTitle","handleUserNameChange","bind","handleSubmit","sendToServer","event","this","setState","target","value","preventDefault","userinfo","userData","name","loading","loaded","failed","joined","concat","memberName","userlist","i","getLoading","Axios","get","params","username","then","response","a","async","status","data","catch","error","undefined","console","log","length","indexVal","newList","oldData","JSON","parse","localStorage","getItem","prompt","updateSelection","Array","isArray","eventContainer","eventName","push","setItem","stringify","arrayHolder","listItem","className","map","index","key","version","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","onClick","removeName","x1","y1","x2","y2","trigger","item","checkForAllLoaded","checkForFailed","onSubmit","type","onChange","showNamesList","canCreate","appStateUpdate","setStoredData","to","React","Component","Current","url","axios","create","View","list","getData","current","selection","selectionName","setCurrent","updateCurrentDataSet","newProps","arrayNew","newest","currents","b","requested","api","getCurrent","getUserData","res","dataPoints","old","src","img","width","alt","renderAllStatsCard","lister","userDataOld","renderStartingStats","renderCurrentStats","renderDifference","ai","bi","missile","Object","keys","rank","level","xp","curr","getDifferenceData","showCard","EventList","storageData","refreshed","getDataStart","sel","newData","replace","setSelection","renderButtons","showCreatedEvents","Header","logo","lantern","href","github","App","hotjar","h","o","window","document","hj","q","arguments","_hjSettings","hjid","hjsv","getElementsByTagName","createElement","appendChild","selected","path","render","exact","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c225e6a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clicktosee.e92ff569.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.8f70103c.svg\";","module.exports = __webpack_public_path__ + \"static/media/lantern.58225369.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1bb02710.svg\";","import React from 'react';\nimport Axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass CreateForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            names: [],\n            addMember: '',\n            expData: {},\n            waitingForAPI: true,\n            newTitle: null,\n        };\n        this.handleUserNameChange = this.handleUserNameChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.sendToServer = this.sendToServer.bind(this);\n    }\n  \n    handleUserNameChange(event) {\n        this.setState({addMember: event.target.value});\n    }\n\n    async handleSubmit(event) {\n    event.preventDefault();\n        if (this.state.addMember === '') return;\n    \n        const userinfo = {\n          userData: {\n            name: this.state.addMember,\n            loading: false,\n            loaded: false,\n            failed: false,\n            expData: {}\n          }\n        }\n        let joined = this.state.names.concat(userinfo)\n        await this.setState({\n          names: joined\n        });\n        this.sendToServer(this.state.addMember);\n        this.setState({addMember: ''});\n    }\n\n    async sendToServer(memberName) {\n        const userlist = this.state.names;\n        const url = 'https://osseapi.lavidadev.com/skillevent/create';\n        for (let i = 0; userlist.length > i; i++){\n          let getLoading = this.state.names;\n          let check = getLoading[i];\n          if (typeof check === \"undefined\") continue;\n          if (getLoading[i].userData.loaded === true || getLoading[i].userData.loading === true || getLoading[i].userData.failed === true) {\n            continue;\n          }\n          getLoading[i].userData.loading = true;\n          getLoading[i].userData.loaded = false;\n          getLoading[i].userData.failed = false;\n          await this.setState({\n            names: getLoading,\n            waitingForAPI: true\n          });\n          await Axios.get(url, {\n            params: {\n              username: userlist[i].userData.name\n            }\n          })\n          .then(async(response) => {\n            if (response.status === 200){\n              getLoading = this.state.names;\n              getLoading[i].userData.loading = false;\n              getLoading[i].userData.loaded = true;\n              getLoading[i].userData.failed = false;\n              getLoading[i].userData.expData = response.data;\n              await this.setState({\n                names: getLoading,\n                waitingForAPI: false\n              });\n              // console.log(getLoading[i].userData.expData);\n            }\n          })\n          .catch(async(error) => {\n            if (error.status !== 200){\n              getLoading = this.state.names;\n              if (getLoading[i] === undefined) return\n              getLoading[i].userData.failed = true;\n              getLoading[i].userData.loading = false;\n              getLoading[i].userData.loaded = false;\n              await this.setState({\n                names: getLoading,\n                waitingForAPI: false\n              });\n              return;\n            }\n            console.log(error);\n          });\n        }\n        \n    }\n\n    removeName(indexVal) {\n      let newList = this.state.names;\n      delete newList[indexVal];\n\n      this.setState({\n        names: newList\n      });\n\n    }\n\n    async setStoredData() {\n      let oldData = JSON.parse(localStorage.getItem('listicles'));\n      let response = prompt(\"name the event\");\n      if (!response)return;\n      this.props.data.updateSelection(response)\n      console.log(oldData);\n      if (oldData);\n      if (Array.isArray(oldData)){\n        console.log('found array')\n        console.log(oldData);\n        let eventContainer = {\n          data: [this.state.names],\n          eventName: response\n        }\n        oldData.push(eventContainer);\n        localStorage.setItem('listicles', JSON.stringify(oldData));\n        return;\n      }\n      let eventContainer = {\n        data: [this.state.names], \n        eventName: response\n      }\n      let arrayHolder = [];\n      arrayHolder.push(eventContainer);\n      console.log('did not find array');\n      localStorage.setItem('listicles', JSON.stringify(arrayHolder));\n     \n    }\n\n    showNamesList() {\n      const listItem = this.state.names;\n      if (!Array.isArray(listItem) || !listItem.length) return;\n      return (\n        <ul className=\"listview\">\n          {listItem.map((data, index) => \n          <li className=\"list-item-names\"key={index}>{this.state.names[index].userData.name}\n            {this.state.names[index].userData.loading ? <div className=\"loadingio-spinner-rolling-zlhkp6cwop\"><div className=\"ldio-6zt3tgvfpyv\"><div></div></div></div>: null}\n            {this.state.names[index].userData.loaded ? <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 130.2 130.2\">\n  <circle className=\"path circle\" fill=\"none\" stroke=\"#73AF55\" strokeWidth=\"6\" strokeMiterlimit=\"10\" cx=\"65.1\" cy=\"65.1\" r=\"62.1\"/>\n  <polyline className=\"path check\" fill=\"none\" stroke=\"#73AF55\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"/>\n</svg> : null}\n            {this.state.names[index].userData.failed ? <div onClick={()=>this.removeName(index)}><svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 130.2 130.2\">\n  <circle className=\"path circle\" fill=\"none\" stroke=\"#D06079\" strokeWidth=\"6\" strokeMiterlimit=\"10\" cx=\"65.1\" cy=\"65.1\" r=\"62.1\"/>\n  <line className=\"path line\" fill=\"none\" stroke=\"#D06079\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" x1=\"34.4\" y1=\"37.9\" x2=\"95.8\" y2=\"92.3\"/>\n  <line className=\"path line\" fill=\"none\" stroke=\"#D06079\" strokeWidth=\"6\" strokeLinecap=\"round\" strokeMiterlimit=\"10\" x1=\"95.8\" y1=\"38\" x2=\"34.4\" y2=\"92.2\"/>\n</svg></div> : null}\n          </li>)\n          }\n        </ul>\n      );  \n    }\n\n    checkForAllLoaded() {\n      const listItem = this.state.names;\n      let trigger = true;\n\n      if (!Array.isArray(listItem) || !listItem.length) return;\n   \n      listItem.map((data) => {\n        data.userData.loaded? trigger = true: trigger = false;\n        data.userData.loading? trigger = false: trigger = true;\n      });\n\n      return trigger;\n    }\n\n    checkForFailed() {\n      const listItem = this.state.names;\n      let foundFailure = false;\n      if (!Array.isArray(listItem) || !listItem.length) return;\n      \n      for (let i = 0; listItem.length > i; i++){\n        let item = listItem[i];\n        if (item === undefined || item === null) continue;\n        if (listItem[i].userData.failed === true){\n          return true;\n        }\n      }\n      return foundFailure;      \n    }\n\n    canCreate() {\n      if (this.state.names.length && this.checkForAllLoaded() && !this.checkForFailed()) {\n        return true;\n      }\n      return false;\n    }\n\n    render() {\n      return (\n        <section className=\"form-info-wrapper\">\n            <article>\n            <p>start typing to grab user data</p>\n            <form className=\"form-add-user\" onSubmit={this.handleSubmit}>\n            <label className=\"username-label\">\n                username: \n            </label>\n            <input className=\"form-textfield\" type=\"text\" value={this.state.addMember} onChange={this.handleUserNameChange}/>\n            <input className=\"form-button\" type=\"submit\" value=\"add\" />\n            </form>\n            {this.showNamesList()}\n            <div className=\"ButtonsWrapper\">\n              {this.canCreate() ? <Link onClick={\n                ()=>{\n                  this.props.data.appStateUpdate(this.state.names)\n                  this.setStoredData()\n                }\n                } className=\"a-button\" to=\"/view\">create clan event</Link>: null }\n                \n                \n            </div>\n            {this.state.names.length? \n            <section>\n              <p>{this.checkForAllLoaded()? '':'fletchin data'}</p>\n              <p className=\"status-message\">\n                {this.checkForFailed()? 'failed username check(s). try rechecking if you think this is in error; otherwise remove failed usernames.' : null }\n              </p>\n              </section>\n             : null }\n            </article>\n            \n        </section>\n      );\n    }\n  }\n\n  export default CreateForm;","import Axios from 'axios';\nclass Current {\n    constructor(){\n        this.url = 'https://osseapi.lavidadev.com/skillevent/create';\n        this.axios = new Axios.create();\n    }\n\n    async getUserData(username) {\n        const response = await this.axios.get(this.url, {\n            params: {\n                username: username\n            }\n        });\n/*         .then(async(response) => {\n        if (response.status === 200) {\n            console.log(response.data);\n            return response.data;\n        }\n        })\n        .catch(async(error) => {\n        if (error.status !== 200) {\n            console.log(error);\n            return;\n        }\n        console.log(error);\n        }); */\n        return response;\n    }\n}\n\nexport default Current;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ViewEvent.css';\nimport img from './clicktosee.png'\nimport getCurrent from '../CreateEvent/GetCurrent';\n\nclass View extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n          list: this.getData(),\n          current: [],\n          selection: this.props.selectionName\n      }\n\n    }\n\n    componentDidMount() {\n        this.setCurrent().then(async ()=>{\n\n            let data = await this.updateCurrentDataSet(this.state.selection);\n            await this.setState({\n                current: data\n            });\n\n        });\n    }\n\n    async componentWillReceiveProps(newProps) {\n        const oldProps = this.props\n        if(oldProps.selection !== newProps.selectionName){\n            await this.setState({selection: newProps.selectionName});\n            this.updateCurrentDataSet(this.state.selection);\n        }\n    }\n\n    componentDidUpdate() {\n        \n    }\n\n\n    getData(){\n        let data = JSON.parse(localStorage.getItem('listicles'));\n        let arrayNew = [];\n        arrayNew.push(data);\n        return arrayNew;\n    }\n\n    async updateCurrentDataSet (selection) {\n        let newest = this.state.current;\n        let currents = newest;\n        if (currents[0].length){\n            for (let a = 0; currents[0].length > a; a++) {\n                if (currents[0][a].eventName === selection){\n                    let data = currents[0][a].data[0];\n                    for (let b = 0; data.length > b; b++){\n                        if (data[b].userData.requested === false && data[b].userData.failed === false) {\n                            let api = new getCurrent();\n                            data[b].userData.requested = true;\n                            api.getUserData(data[b].userData.name).then(async(res)=> {\n                                if (res.status === 200) {\n                                    data[b].userData.failed = false;\n                                    data[b].userData.loaded = true;\n                                    data[b].userData.expData.dataPoints = res.data.dataPoints;\n                                    this.setState({\n                                        current: currents\n                                    });\n                                }else {\n                                    data[b].failed = true;\n                                    data[b].loaded = false;\n                                    this.setState({\n                                        current: currents\n                                    });\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return currents;\n    }\n\n    async setCurrent() {\n        let old = JSON.stringify(this.state.list);\n        let newest = JSON.parse(old);\n\n        let currents = newest;\n        if (currents[0].length){\n            for (let a = 0; currents[0].length > a; a++) {\n                let data = currents[0][a].data[0];\n                for (let b = 0; data.length > b; b++){\n                    if (data[b].userData.loaded === true) {\n                        data[b].userData.loaded = false;\n                        data[b].userData.expData.dataPoints = {};\n                        data[b].userData.requested = false;\n                    }\n                }\n            }\n        }\n        await this.setState({\n            current: currents\n        });\n    }   \n\n    showCard() {\n        if (this.props.selectionName === null) {\n            return (\n                <div className=\"showOptions\">\n                    <div><img src={img} width=\"400px\" alt=\"click to display data\"></img></div>\n                    <Link to=\"/\">create a new event</Link>\n                </div>\n            )\n        }else {\n            return (\n                <div className=\"cardsWrapper\">\n                    {this.renderAllStatsCard(this.props.selectionName)}\n                    \n                </div>\n            );\n        }\n    }\n\n    renderAllStatsCard(selection) {\n        let lister = this.state.list[0];\n        if (lister.length){\n            for (let i = 0; lister.length > i; i++) {\n                if (selection === lister[i].eventName){\n                    let eventName = lister[i].eventName\n                    let datas = lister[i].data;\n                    let userDataOld = datas[0];\n                    return(\n                        userDataOld.map((data, index) => \n                            <div key={index} className=\"cardOuterWrapper\">\n                                <div className=\"cardTitle\">username: {data.userData.name}</div>\n                                <div className=\"cardInnerWrapper\">\n                                    {this.renderStartingStats(eventName, userDataOld, i, index)}\n                                    {this.renderCurrentStats(eventName, userDataOld, i, index)}\n                                    {this.renderDifference(eventName, userDataOld, i, index)}\n                                </div>\n                            </div>\n                        )\n\n                    )\n                }\n            }\n        }\n    }\n\n    renderStartingStats(eventName, data, ai, bi) {\n        if (!this.state.current[0])return;\n        let missile = this.state.list[0][ai].data[0][bi].userData.expData.dataPoints\n        return (\n        <div className=\"startColumn\">\n            <div className=\"startColumnTitle\">\n                starting stats\n            </div>\n            <div className=\"startColumnSkill\">\n                <div className=\"startColumnTitle\">skill</div>\n            </div>\n            <div className=\"startColumnRank\">\n                <div className=\"startColumnTitle\">rank</div>\n            </div>\n            <div className=\"startColumnLevel\">\n                <div className=\"startColumnTitle\">level</div>\n            </div>\n            <div className=\"startColumnExperience\">\n                <div className=\"startColumnTitle\">exp</div>\n            </div>\n            <div className=\"startingSkillList\">\n                {Object.keys(missile).map((data, index)=>\n                    <div key={data} className=\"skillWrapper\">\n                        <div className=\"skillHolder\">{data}</div>\n                        <div className=\"skillHolder\">{missile[data].rank}</div>\n                        <div className=\"skillHolder\">{missile[data].level}</div>\n                        <div className=\"skillHolder\">{missile[data].xp}</div>\n                    </div>\n                )}\n            </div>\n        </div>\n        );\n        \n    }\n\n\n\n    renderCurrentStats(eventName, data, ai, bi){\n        if (!this.state.current[0])return;\n        let missile = this.state.current[0][ai].data[0][bi].userData.expData.dataPoints\n        let loaded = this.state.current[0][ai].data[0][bi].userData.loaded;\n\n\n        return (\n            <div className=\"currentColumn\">\n                {loaded?null:\n                    <div className=\"loadingWrapper\">\n                    <div>\n                        fletchin stats\n                    </div>\n                    <div className=\"loadingio-spinner-rolling-zlhkp6cwop\">\n                        <div className=\"ldio-6zt3tgvfpyv\">\n                            <div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                }\n            {loaded? <><div className=\"currentColumnTitle\">\n                current stats\n            </div>\n            <div className=\"currentColumnSkill\">\n                <div className=\"currentColumnTitle\">skill</div>\n            </div>\n            <div className=\"currentColumnRank\">\n                <div className=\"currentColumnTitle\">rank</div>\n            </div>\n            <div className=\"currentColumnLevel\">\n                <div className=\"currentColumnTitle\">level</div>\n            </div>\n            <div className=\"currentColumnExperience\">\n                <div className=\"currentColumnTitle\">exp</div>\n            </div>\n            <div className=\"currentSkillList\">\n                {Object.keys(missile).map((data, index)=>\n                    <div key={data} className=\"skillWrapper\">\n                        <div className=\"skillHolder\">{data}</div>\n                        <div className=\"skillHolder\">{missile[data].rank}</div>\n                        <div className=\"skillHolder\">{missile[data].level}</div>\n                        <div className=\"skillHolder\">{missile[data].xp}</div>\n                    </div>\n                )}\n            </div>\n    </>: null}\n        </div>\n        );\n    }\n\n    getDifferenceData(){\n        console.log('gettting difference data')\n    }\n\n    renderDifference(eventName, data, ai, bi) {       \n        if (!this.state.current[0])return;\n        let curr = this.state.current[0][ai].data[0][bi].userData.expData.dataPoints\n        let old = this.state.list[0][ai].data[0][bi].userData.expData.dataPoints\n        let loaded = this.state.current[0][ai].data[0][bi].userData.loaded;\n        if (loaded){\n            this.getDifferenceData(ai, bi);\n        }\n        return (\n            <div className=\"diffColumn\">\n                {loaded?null:\n                    <div className=\"loadingWrapper\">\n                    <div>\n                        waiting on stats\n                    </div>\n                    <div className=\"loadingio-spinner-rolling-zlhkp6cwop\">\n                        <div className=\"ldio-6zt3tgvfpyv\">\n                            <div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                }\n            {loaded? <><div className=\"currentColumnTitle\">\n                 stats diff\n            </div>\n            <div className=\"currentColumnSkill\">\n                <div className=\"currentColumnTitle\">skill</div>\n            </div>\n            <div className=\"currentColumnRank\">\n                <div className=\"currentColumnTitle\">rank</div>\n            </div>\n            <div className=\"currentColumnLevel\">\n                <div className=\"currentColumnTitle\">level</div>\n            </div>\n            <div className=\"currentColumnExperience\">\n                <div className=\"currentColumnTitle\">exp</div>\n            </div>\n            <div className=\"currentSkillList\">\n           {Object.keys(curr).map((data, index)=>\n                    <div key={data} className=\"skillWrapper\">\n                        <div className=\"skillHolder\">{data}</div>\n                        <div className=\"skillHolder\">{curr[data].rank - old[data].rank}</div>\n                        <div className=\"skillHolder\">{curr[data].level - old[data].level}</div>\n                        <div className=\"skillHolder\">{curr[data].xp - old[data].xp}</div>\n                    </div>\n            )}\n            </div>\n            </>: null}\n        </div>\n        );\n    }\n\n    render() {\n      return (\n        <section className=\"viewEventWrapper\">\n            {this.showCard()}\n        </section>\n      );\n    }\n  }\n\n  export default View;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../CreateEvent/EventList.css';\n\nclass EventList extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            storageData: [],\n            selection: this.props.selectionName,\n            refreshed: false\n        } \n        this.getDataStart();\n    }\n\n    setSelection(sel){\n        this.setState({\n            selection: sel\n        })\n        this.props.data.updateSelection(sel)\n    }\n\n    async getDataStart() {\n        let newData = await JSON.parse(localStorage.getItem('listicles'));\n        this.setState({\n            storageData: newData\n        });\n    }\n\n    async getData() {\n        let newData = await JSON.parse(localStorage.getItem('listicles'));\n        let oldData = this.state.storageData;\n        if (JSON.stringify(newData) === JSON.stringify(oldData)) {\n        } else {\n            this.setState({\n                storageData: newData,\n                selection: this.props.selectionName\n            });\n        }\n\n    }\n\n    renderButtons(){\n        this.getData();\n        if (this.state.storageData === null)return;\n        return(\n            <ul>\n            {this.state.storageData.map((data, index) =>\n                <Link to=\"/view\" replace>\n                    <li key={index} className={data.eventName === this.state.selection? 'selected': ''}\n                        onClick={()=>\n                            this.setSelection(data.eventName)\n                        }\n                    >\n                    {data.eventName}\n                    </li>\n                </Link>\n            )}\n        </ul>\n        );\n    }\n\n    showCreatedEvents() {        \n        return (\n            <div className=\"card createdWrapper\">\n                {this.renderButtons()}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n              {this.showCreatedEvents()}\n            </div>\n        );\n    }\n\n}\n\nexport default EventList;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../App/logo.svg';\nimport lantern from '../App/lantern.svg'\nimport github from '../App/github.svg'\n\nclass Header extends React.Component {\n\n    render() {\n        return (\n            <div className=\"App-header\">\n                <div className=\"logo-wrapper\">\n                    <Link to=\"/\"><img src={logo} className=\"App-logo App-header-item\" alt=\"logo\" /></Link>\n                    <img src={lantern} className=\"App-logo-lantern\" alt=\"lantern\" />\n                </div>\n                \n                <a href=\"/\">OSRS:SE</a>\n                <a href=\"https://github.com/treygrr/osse\"><img src={github} className=\"App-logo-github\" alt=\"github\" /></a>\n            </div>\n        );\n    }\n\n}\n\nexport default Header;","import React from 'react';\n\nimport './App.css';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport CookieConsent from 'react-cookie-consent'\n\n\nimport CreateForm from '../CreateForm';\nimport ViewEvent from '../CreateEvent/ViewEvent';\nimport EventList from '../CreateEvent/EventList';\nimport Header from './Header';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = { \n      names: [],\n      addMember: 'Typer Username',\n      selection: null,\n    };\n  }\n\n  componentDidMount(){\n    this.hotjar();\n  }\n\n  appStateUpdate(data) {\n    if (data){\n      this.setState({\n        names: data\n      });\n    }\n  }\n\n  hotjar() {\n    ((h,o,t,j,a,r)=>{\n      h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n      h._hjSettings={hjid:1626185,hjsv:6};\n      a=o.getElementsByTagName('head')[0];\n      r=o.createElement('script');r.async=1;\n      r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n      a.appendChild(r);\n  })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');\n  }\n\n  updateSelection(selected){\n    if (selected){\n      this.setState({\n        selection: selected\n      });\n    }\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n        <Header />\n        <CookieConsent>\n          This website uses cookies to enhance the user experience.\n        </CookieConsent>\n        <EventList  data={ {updateSelection: this.updateSelection.bind(this)} } selectionName={this.state.selection}>\n        </EventList>\n          <div className=\"App-body\">\n            <Route path=\"/view\" render={(props) => <ViewEvent selectionName={this.state.selection}  names={this.state.names}/>} />\n            <Route path=\"/\" exact render={(props) => <CreateForm data={{appStateUpdate:this.appStateUpdate.bind(this), updateSelection: this.updateSelection.bind(this), names: this.state.names, addMember: this.state.addMember}}/>}/>\n          </div>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}